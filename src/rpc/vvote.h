/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _VVOTE_H_RPCGEN
#define _VVOTE_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define PORTNUM "6106"
#define MAX_PENDING 5
#define BUF_SIZE 256

struct Candidate {
	char *name;
	int votes;
	struct Candidate *next;
};
typedef struct Candidate Candidate;

struct Voter {
	int id;
	u_int voted;
	struct Voter *next;
};
typedef struct Voter Voter;

struct Credential {
	char *username;
	char *password;
	char *newpassword;
};
typedef struct Credential Credential;

struct Votefor_Param {
	char *candi_name;
	int voterid;
};
typedef struct Votefor_Param Votefor_Param;

/*GLOBAL VARIABLES*/
extern Candidate *chead;
extern Voter *vhead;
extern int shut_down;
//extern char buffer[BUF_SIZE];
extern char response[BUF_SIZE];
extern char username[BUF_SIZE];
extern char pwd[BUF_SIZE];

/*HELPER METHODS DECLARE*/
extern void printvoters(Voter*);
extern void printcandidates(Candidate*);
extern void deleCanList(Candidate**);
extern void deleVoList(Voter**);
extern Voter *search_voter(Voter **, int);
extern u_int check_credential(Credential *, char *, char *);
extern void bubble(Candidate **, Candidate *);
extern void exchangeContent(Candidate *, Candidate *);
extern void find_max(Candidate **, char *);
extern Candidate *getTail(Candidate*);

extern void error(const char*);

#define VOTINGSYS 0x2fffffff
#define VOTINGSYS_V1 1

#if defined(__STDC__) || defined(__cplusplus)
#define changepassword 1
extern  char ** changepassword_1(Credential *, CLIENT *);
extern  char ** changepassword_1_svc(Credential *, struct svc_req *);
#define zeroize 2
extern  char ** zeroize_1(void *, CLIENT *);
extern  char ** zeroize_1_svc(void *, struct svc_req *);
#define addvoter 3
extern  char ** addvoter_1(char **, CLIENT *);
extern  char ** addvoter_1_svc(char **, struct svc_req *);
#define votefor 4
extern  char ** votefor_1(Votefor_Param *, CLIENT *);
extern  char ** votefor_1_svc(Votefor_Param *, struct svc_req *);
#define listcandidates 5
extern  char ** listcandidates_1(void *, CLIENT *);
extern  char ** listcandidates_1_svc(void *, struct svc_req *);
#define votecount 6
extern  char ** votecount_1(char **, CLIENT *);
extern  char ** votecount_1_svc(char **, struct svc_req *);
#define viewresult 7
extern  char ** viewresult_1(Credential *, CLIENT *);
extern  char ** viewresult_1_svc(Credential *, struct svc_req *);
extern int votingsys_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define changepassword 1
extern  char ** changepassword_1();
extern  char ** changepassword_1_svc();
#define zeroize 2
extern  char ** zeroize_1();
extern  char ** zeroize_1_svc();
#define addvoter 3
extern  char ** addvoter_1();
extern  char ** addvoter_1_svc();
#define votefor 4
extern  char ** votefor_1();
extern  char ** votefor_1_svc();
#define listcandidates 5
extern  char ** listcandidates_1();
extern  char ** listcandidates_1_svc();
#define votecount 6
extern  char ** votecount_1();
extern  char ** votecount_1_svc();
#define viewresult 7
extern  char ** viewresult_1();
extern  char ** viewresult_1_svc();
extern int votingsys_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_Candidate (XDR *, Candidate*);
extern  bool_t xdr_Voter (XDR *, Voter*);
extern  bool_t xdr_Credential (XDR *, Credential*);
extern  bool_t xdr_Votefor_Param (XDR *, Votefor_Param*);

#else /* K&R C */
extern bool_t xdr_Candidate ();
extern bool_t xdr_Voter ();
extern bool_t xdr_Credential ();
extern bool_t xdr_Votefor_Param ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_VVOTE_H_RPCGEN */
