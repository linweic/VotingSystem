/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _VVOTE_H_RPCGEN
#define _VVOTE_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define PORTNUM "6106"
#define MAX_PENDING 5
#define BUF_SIZE 256

struct Candidate {
	char *name;
	int votes;
	struct Candidate *next;
};
typedef struct Candidate Candidate;

struct Voter {
	int id;
	u_int voted;
	struct Voter *next;
};
typedef struct Voter Voter;

struct Credential {
	char *username;
	char *password;
	char *newpassword;
};
typedef struct Credential Credential;

/*GLOBAL VARIABLES*/
extern Candidate *chead;
extern Voter *vhead;
extern int shut_down;
extern char buffer[BUF_SIZE];
extern char response[BUF_SIZE];
extern char username[BUF_SIZE];
extern char pwd[BUF_SIZE];

#define VOTINGSYS 0x2fffffff
#define VOTINGSYS_V1 1

#if defined(__STDC__) || defined(__cplusplus)
#define changepassword 1
extern  char ** changepassword_1(Credential *, CLIENT *);
extern  char ** changepassword_1_svc(Credential *, struct svc_req *);
extern int votingsys_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define changepassword 1
extern  char ** changepassword_1();
extern  char ** changepassword_1_svc();
extern int votingsys_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_Candidate (XDR *, Candidate*);
extern  bool_t xdr_Voter (XDR *, Voter*);
extern  bool_t xdr_Credential (XDR *, Credential*);

#else /* K&R C */
extern bool_t xdr_Candidate ();
extern bool_t xdr_Voter ();
extern bool_t xdr_Credential ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_VVOTE_H_RPCGEN */
